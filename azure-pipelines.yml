name: iLabel-CI-CD-$(date:yyyyMMdd)$(rev:.r)

trigger:
  branches:
    include:
      - master   # master 병합 시 Stage 서버 배포

variables:
  buildConfiguration: 'Release'

stages:
# 1. 빌드 단계
- stage: Build
  displayName: "Build iLabel"
  jobs:
  - job: BuildJob
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: DotNetCoreCLI@2
      displayName: "NuGet Restore"
      inputs:
        command: 'restore'
        projects: 'iLabel/TotalLabel.sln'   # 솔루션 기준 복원

    - task: DotNetCoreCLI@2
      displayName: "Build Solution"
      inputs:
        command: 'build'
        projects: 'iLabel/TotalLabel.sln'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: "Publish Project"
      inputs:
        command: 'publish'
        projects: 'iLabel/TotalLabel/TotalLabel.csproj'
        arguments: '--configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)'
        zipAfterPublish: true

    - publish: $(Build.ArtifactStagingDirectory)
      artifact: drop

# 2. 배포 단계 (Stage)
- stage: DeployStage
  displayName: "Deploy iLabel to Stage"
  dependsOn: Build
  condition: succeeded()
  jobs:
  - job: DeployJob
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: AzureWebApp@1
      displayName: "Deploy to Azure Web App (Stage)"
      inputs:
        azureSubscription: 'MyServiceConnection'   # Service Connection 이름 교체
        appName: 'ilabelweb-stage'                 # Stage 슬롯 이름
        package: '$(Pipeline.Workspace)/drop/**/*.zip'
